  <div class="control-group field form-group <%= add_error_class :name %>">
    <%= f.label :name, 'Name*', :class => 'control-label col-sm-3' %>
    <div class="controls col-sm-6">
      <%= f.text_field :name, :class => 'form-control' %>
    </div>
    <span><%= @business.errors[:name].to_sentence %></span>
  </div>

  <div class="control-group field form-group <%= add_error_class :owner_name %>">
    <%= f.label :owner_name, :class => 'control-label col-sm-3' %>
    <div class="controls col-sm-6">
      <%= f.text_field :owner_name, :class => 'form-control' %>
    </div>
  </div>

  <div class="control-group field form-group <%= add_error_class :category %>">
    <%= f.label :category_id, 'Category*', :class => 'control-label col-sm-3' %>
    <div class="controls col-sm-6">
      <% #FIXME_AB: Why all categories, we should have all enabled categories only -%>
      <%= f.collection_select(:category_id, Category.all, :id, :name, { include_blank: 'Select Category' }, class: 'form-control') %>
    </div>
    <span><%= @business.errors[:category].to_sentence %></span>

  </div>

  <%= f.fields_for :address do |l| %>
    <div class="control-group field form-group <%= add_error_class :'address.street' %>">
      <%= l.label :street, :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= l.text_field :street, :class => 'form-control' %>
      </div>
    </div>

    <div class="control-group field form-group <%= add_error_class :'address.building' %>">
      <%= l.label :building, :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= l.text_field :building, :class => 'form-control' %>
      </div>
    </div>

    <div class="control-group field form-group <%= add_error_class :'address.landmark' %>">
      <%= l.label :landmark, :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= l.text_field :landmark, :class => 'form-control' %>
      </div>
    </div>

    <div class="control-group field form-group <%= add_error_class :'address.pin_code' %>">
      <%= l.label :pin_code, 'Zip Code*', :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= l.text_field :pin_code, :class => 'form-control' %>
      </div>
    <span><%= @business.errors['address.pin_code'].to_sentence %></span>
    </div>

    <div class="control-group field form-group <%= add_error_class :'address.city' %>">
      <%= l.label :city, 'City*', :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= l.text_field :city, :class => 'form-control' %>
      </div>
    <span><%= @business.errors['address.city'].to_sentence %></span>
    </div>

    <div class="control-group field form-group <%= add_error_class :'address.country' %>">
      <%= l.label :country, 'Country*', :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= l.select :country, options_for_select(Carmen::Country.all.map{|x| p x.name, value: x.name, data: { code: x.alpha_2_code } }, @business.address.country ), { include_blank: 'Select Country' }, :class => 'form-control' %>
      </div>
    <span><%= @business.errors['address.country'].to_sentence %></span>
    </div>

    <div class="control-group field form-group <%= add_error_class :'address.state' %>">
      <%= l.label :state, 'State*', :class => 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <% #FIXME_AB: Not all contries have states in the Carmen gem, like "Isle of Man" or Hong Kong in that case there are no options in state select box. so we should replace select state with test field. or instead of select state have a text field which will autocomplete based on suggestions else user can enter this own state -%>
        <%= l.select(:state, [@business.address[:state]], {include_blank: 'Select State'}, :class => 'form-control') %>
      </div>
    <span><%= @business.errors['address.state'].to_sentence %></span>
    </div>

    <%= l.hidden_field :area%>

    <div class="control-group field form-group <%= add_error_class :'address.area' %>">
      <%= label_tag 'Area', nil,class: 'control-label col-sm-3' %>
      <div class="controls col-sm-6">
        <%= text_field_tag 'Area', @business.address.area, :class => 'form-control' %>
      </div>
    </div>
  <% end %>
